type StringBuilder =
    data: Ptr Char
    length: Usz
    cap: Usz

empty () = StringBuilder (null ()) 0 0

// reserve space for at least n additional characters
reserve (s: Ref StringBuilder) (n: Usz) : Unit =
    if s.length + n > s.cap then
        new_size = s.cap + n
        ptr = realloc s.data new_size

        if ptr == null () then
            print "Error in reserving more elements for Vec"
            return ()

        s.&data := ptr
        s.&cap := new_size

// append a string
append (s: Ref StringBuilder) (new_str: String) : Unit =
    reserve s new_str.length
    memcpy (cast (cast s.data + s.length)) new_str.c_string (cast (new_str.length+1))
    s.&length := s.length + new_str.length

// convert to string
to_string (s: Ref StringBuilder) : String =
    String (s.data) (s.length)

impl Print StringBuilder with
    printne (s: Ref StringBuilder) : Unit =
        print (to_string s)
