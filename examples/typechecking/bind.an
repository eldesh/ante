bind opt f =
    match opt
    | Some x -> f x
    | None -> None

ret x = Some x

x = Some 10i32

add_one x =
    bind x (fn x -> ret (x + 1i32))

// args: --check --show-types
// expected stdout:
// add_one : forall a. (Maybe I32 -> Maybe I32 can a)
// bind : forall a b c d. (Maybe c - (c => Maybe b can d) -> Maybe b can d)
// ret : forall a b. (a -> Maybe a can b)
// x : Maybe I32
