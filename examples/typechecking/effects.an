effect Log with
    log: String -> Unit

effect Use a with
    get: Unit -> a
    set: a -> Unit

// Expect `can Use Unit` and not `can Log`
handle_basic () = 
    handle log "test1"
    | log v -> set v

use_resume () =
    handle ()
    // Test these two 'resume's refer to two different variables
    // with incompatible types
    | get () -> resume 3i32
    | set _ -> resume ()

does_use x =
    y = get ()
    set (y + x)

// args: --check --show-types
// expected stdout:
// does_use : forall a b. (a -> Unit can (Use a, b))
//   given Add a
// get : forall a b. (Unit -> a can (Use a, b))
// handle_basic : forall a. (Unit -> Unit can (Use String, a))
// log : forall a. (String -> Unit can (Log, a))
// set : forall a b. (a -> Unit can (Use a, b))
// use_resume : forall a. (Unit -> Unit can a)
